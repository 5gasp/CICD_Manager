# @Author: Rafael Direito
# @Date:   01-06-2021 17:43:43
# @Last Modified by:   Rafael Direito
# @Last Modified time: 2023-11-07 10:19:48
---
tests:
  testbed_itav:
    bandwidth:
      id: bandwidth
      name: bandwidth
      description: Tests the bandwidth between to VNFs. The results are in bits/sec
      ftp_base_location: tests/bandwidth/
      test_filename: testBandwidth.robot
      test_type: Robot
      # Certification Scope
      mandatory: false
      weight: 5
      axis: 4
      def: def14.Perf.1
      test_conditions: [7]
      # End of Certification Scope
      test_variables:
      - variable_name: host1_ip
        description: IP of Host/VNF 1
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: host1_username
        description: Login username for Host/VNF 1
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: host1_password
        description: Login password for Host/VNF 1
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: host2_ip
        description: IP of Host/VNF 2
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: host2_username
        description: Login username for Host/VNF 2
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: host2_password
        description: Login password for Host/VNF 2
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: comparator
        description: Comparator to be used while validating the bandwidth
        mandatory: true
        possible_options: ['more_than', 'more_or_equal_than', 'less_than', 'less_or_equal_than']
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: threshold
        description: Threshold in mbits per second
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: float

    bandwidth2:
      id: bandwidth2
      name: bandwidth2
      description: Tests the bandwidth between to VNFs. The results are in bits/sec
      ftp_base_location: tests/bandwidth2/
      test_filename: testBandwidth2.robot
      test_type: Robot
      # Certification Scope
      mandatory: false
      weight: 5
      axis: 4
      def: def14.Perf.1
      test_conditions: [7]
      # End of Certification Scope
      test_variables:
      - variable_name: host1_ip
        description: IP of Host/VNF 1
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: host1_username
        description: Login username for Host/VNF 1
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: host1_password
        description: Login password for Host/VNF 1
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: host2_ip
        description: IP of Host/VNF 2
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: host2_username
        description: Login username for Host/VNF 2
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: host2_password
        description: Login password for Host/VNF 2
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: comparator
        description: Comparator to be used while validating the bandwidth
        mandatory: true
        possible_options: ['more_than', 'more_or_equal_than', 'less_than', 'less_or_equal_than']
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: threshold
        description: Threshold in mbits per second
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: float

    transmission_speed:
      id: transmission_speed
      name: transmission speed
      description: Tests the transmission speed between to VNFs. The results are in ms
      ftp_base_location: tests/transmission_speed/
      test_filename: testTransmissionSpeed.robot
      test_type: Robot
      # Certification Scope
      mandatory: false
      weight: 5
      axis: 4
      def: def14.Perf.12
      test_conditions: [7]
      # End of Certification Scope
      test_variables:
      - variable_name: host1_ip
        description: IP of Host/VNF 1
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: host1_username
        description: Login username for Host/VNF 1
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: host1_password
        description: Login password for Host/VNF 1
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: host2_ip
        description: IP of Host/VNF 2
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: host2_username
        description: Login username for Host/VNF 2
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: host2_password
        description: Login password for Host/VNF 2
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: comparator
        description: Comparator to be used while validating the transmission speed
        mandatory: true
        possible_options: ['more_than', 'more_or_equal_than', 'less_than', 'less_or_equal_than']
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: threshold
        description: Threshold in milliseconds
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: float

    packet_loss:
      id: packet_loss
      name: packet loss
      description: Tests the packet loss speed between to VNFs. The results are given in %
      ftp_base_location: tests/packet_loss/
      test_filename: testPacketLoss.robot
      test_type: Robot
      # Certification Scope
      mandatory: false
      weight: 5
      axis: 4
      def: None
      # End of Certification Scope
      test_variables:
      - variable_name: host1_ip
        description: IP of Host/VNF 1
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: host1_username
        description: Login username for Host/VNF 1
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: host1_password
        description: Login password for Host/VNF 1
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: host2_ip
        description: IP of Host/VNF 2
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: host2_username
        description: Login username for Host/VNF 2
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: host2_password
        description: Login password for Host/VNF 2
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: comparator
        description: Comparator to be used while validating the packet loss ratio
        mandatory: true
        possible_options: ['more_than', 'more_or_equal_than', 'less_than', 'less_or_equal_than']
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: threshold
        description: Ratio of packets lost
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: float
    
    ############################################################################
    ##                                                                        ##
    ##                             SECURITY TESTS                             ##                      
    ##                                                                        ##
    ############################################################################

    openstack_port_security:
      id: openstack_port_security
      name: Openstack Port Security
      description: Validates the if all Openstack Interfaces have Port Security enabled
      ftp_base_location: tests/openstack_port_security/
      test_filename: testOpenstackPortSecurity.robot
      test_type: Robot
      # Certification Scope
      mandatory: true
      weight: 5
      axis: 2
      def: def19.Sec.3
      test_conditions: [5]
      # End of Certification Scope


    ssl_audit:
      id: ssl_audit
      name: SSL Audit
      description: Audits the SSL Certificates Protecting and Endpoint
      ftp_base_location: tests/ssl_audit/
      test_filename: test_ssl_audit.robot
      test_type: Robot
      # Certification Scope
      mandatory: false
      weight: 3
      axis: 2
      def: def19.Sec.4
      test_conditions: [5]
      # End of Certification Scope
      test_variables:
      - variable_name: url
        description: Endpoint's URL
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str


    ssh_brute_force:
      id: ssh_brute_force
      name: SSH Brute Force
      description: Audits VNF's SSH Server Credentials
      ftp_base_location: tests/ssh_brute_force/
      test_filename: testSSHBruteforce.robot 
      test_type: Robot
      # Certification Scope
      mandatory: false
      weight: 4
      axis: 2
      def: def19.Sec.5
      test_conditions: [5]
      # End of Certification Scope
      test_variables:
      - variable_name: username
        description: The username of the VNF (optional)
        mandatory: false
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: max_usernames_to_test
        description: The maximum number of usernames to be tested (when the VNF's username is not provided - mandatory) 
        mandatory: false
        possible_options: []
        can_be_injected_by_the_nods: False
        type: int
      - variable_name: max_password_to_test
        description: The maximum number of passwords to be tested (mandatory)
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: int
      - variable_name: target_ip
        description: The IP of the target VNF (mandatory)
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: target_port
        description: The Port of the target VNF where the SSH Server is Running (optional, default=22)
        mandatory: false
        possible_options: []
        can_be_injected_by_the_nods: False
        type: int
  

    open_ports:
      id: open_ports
      name: open ports
      description: Validates the if a VM's open ports are the ones that should be open
      ftp_base_location: tests/open_ports/
      test_filename: testOpenPorts.robot
      test_type: Robot
      # Certification Scope
      mandatory: true
      weight: 5
      axis: 2
      def: def19.Sec.7
      test_conditions: [5]
      # End of Certification Scope
      test_variables:
      - variable_name: host
        description: Host of the target VNF
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: expected_open_ports
        description: Ports that should be open (Example - 22/tcp,8090/tcp)
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str


    ssh_audit:
      id: ssh_audit
      name: SSH Audit
      description: Audits VNF's SSH Server
      ftp_base_location: tests/ssh_audit/
      test_filename: testSshAudit.robot
      test_type: Robot
      # Certification Scope
      mandatory: true
      weight: 5
      axis: 2
      def: def19.Sec.8
      test_conditions: [5]
      # End of Certification Scope
      test_variables:
      - variable_name: ssh_host
        description: Host of the target VNF
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: ssh_port
        description: Port where the SSH Server is running (default=22)
        mandatory: false
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str

    # TODO !
    mini_api_configuration: 
      id: mini_api_configuration
      name: Mini API Configuration Robot Script
      description: Used to Configure the MiniAPI
      ftp_base_location: tests/mini_api_configuration/
      test_filename: mini_api_configuration.robot
      test_type: Robot
      # Certification Scope
      mandatory: false
      weight: -1
      axis: -1
      def: NoDef
      test_conditions: [-1]
      # End of Certification Scope
      test_variables:
      - variable_name: configuration_endpoint
        description: The MiniAPI COnfiguration endpoint
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: configuration_payload
        description: The payload o be submitted to the MiniAPI
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      

    # TODO !
    nef_authentication_test: 
      id: nef_authentication_test
      name: NEF Authentication Test
      description: Audits if a VNF is capable of authenticating in the NEF
      ftp_base_location: tests/nef_authentication_test/
      test_filename: nef_authentication_test.robot
      test_type: Robot
      # Certification Scope
      mandatory: false
      weight: -1
      axis: 2
      def: def19.Sec.9
      test_conditions: [-1]
      # End of Certification Scope
      test_variables:
      - variable_name: reporting_api_ip
        description: The IP of the NEF's Reporting API
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: reporting_api_port
        description: The NEF's Reporting API Port
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: int
      - variable_name: mini_api_endpoint_to_invoke
        description: The MiniAPI URL that may be used to trigger this test
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str

#############################################################################
































    dummy_5g_readiness_test:
      id: dummy_5g_readiness_test
      name: Dummy 5G Readiness Test
      description: Dummy 5G Readiness Test
      ftp_base_location: tests/dummy_5g_readiness_test/
      test_filename: dummy_5g_readiness_test.robot
      test_type: Robot
      # Certification Scope
      mandatory: false
      weight: 3
      axis: 1
      # End of Certification Scope
    
    dummy_security_and_privacy_test:
      id: dummy_security_and_privacy_test
      name: Dummy Security And Privacy Test
      description: Dummy 5G Readiness Test
      ftp_base_location: tests/dummy_security_and_privacy_test/
      test_filename: dummy_security_and_privacy_test.robot
      test_type: Robot
      # Certification Scope
      mandatory: false
      weight: 3
      axis: 2
      # End of Certification Scope
    
    dummy_availability_and_continuity_test:
      id: dummy_availability_and_continuity_test
      name: Dummy Availability and Continuity Test
      description: Dummy 5G Readiness Test
      ftp_base_location: tests/dummy_availability_and_continuity_test/
      test_filename: dummy_availability_and_continuity_test.robot
      test_type: Robot
      # Certification Scope
      mandatory: false
      weight: 3
      axis: 3
      # End of Certification Scope
    
    dummy_performance_and_scalability_test:
      id: dummy_performance_and_scalability_test
      name: Dummy Performance and Scalability Test
      description: Dummy Performance and Scalability Test
      ftp_base_location: tests/dummy_performance_and_scalability_test/
      test_filename: dummy_performance_and_scalability_test.robot
      test_type: Robot
      # Certification Scope
      mandatory: false
      weight: 3
      axis: 4
      # End of Certification Scope
    
    #####################################################
    ##              Performance Axis Tests             ##
    #####################################################

    api_performace_response_time:
      id: api_performace_response_time
      name: API Performance Response Time
      description: Validates the time needed to get a response from a NApp's provided API
      ftp_base_location: tests/api_performace_response_time/
      test_filename: api_performace_response_time.robot
      test_type: Robot
      # Certification Scope
      mandatory: true
      weight: 5
      axis: 4
      def: def14.Perf.9
      test_conditions: [7]
      # End of Certification Scope
      test_variables:
        - variable_name: api_target
          description: Target API Location (e.g. https://ci-cd-service.5gasp.eu/dashboard)
          mandatory: true
          possible_options: []
          can_be_injected_by_the_nods: True
          type: str
        - variable_name: api_target_threshold_ms
          description: Max Response Time Threshold (ms) (e.g. 1000)
          mandatory: true
          possible_options: []
          can_be_injected_by_the_nods: False
          type: float

    web_performance_static_page:
      id: web_performance_static_page
      name: Web Performance - Static Page
      description: Validates the time needed to gather a static page from a NApp
      ftp_base_location: tests/web_performance_static_page/
      test_filename: web_performance_static_page.robot
      test_type: Robot
      # Certification Scope
      mandatory: false
      weight: 3
      axis: 4
      def: def14.Perf.8
      test_conditions: [7]
      # End of Certification Scope
      test_variables:
        - variable_name: target
          description: Target Webpage Location (e.g. https://ci-cd-service.5gasp.eu/dashboard)
          mandatory: true
          possible_options: []
          can_be_injected_by_the_nods: True
          type: str
        - variable_name: web_speed_net_threshold_bps
          description: Minimum Speed Threshold (bps) (e.g. 5000000)
          mandatory: true
          possible_options: []
          can_be_injected_by_the_nods: False
          type: float

    network_application_performance_rtt:
      id: network_application_performance_rtt
      name: Network Application RTT Performance Test
      description: Validates the RTT between NApp components
      ftp_base_location: tests/network_application_performance_rtt/
      test_filename: network_application_performance_rtt.robot
      test_type: Robot
      # Certification Scope
      mandatory: true
      weight: 5
      axis: 4
      def: def14.Perf.12
      test_conditions: [7]
      # End of Certification Scope
      test_variables:
        - variable_name: target
          description: Target IP/Domain  (e.g. 5gasp.eu)
          mandatory: true
          possible_options: []
          can_be_injected_by_the_nods: True
          type: str
        - variable_name: threshold_ms
          description: Minimum RTT Threshold (ms) (e.g. 500)
          mandatory: true
          possible_options: []
          can_be_injected_by_the_nods: False
          type: float

    #####################################################
    ##       5G Readiness Axis Tests + Enablers        ##
    #####################################################

    mini_api_configuration:
      id: mini_api_configuration
      name: Mini API Configuration - Robot Script
      description: Used to configure a NApp's MiniAPI
      ftp_base_location: tests/mini_api_configuration/
      test_filename: mini_api_configuration.robot
      test_type: Robot
      # Certification Scope
      mandatory: false
      weight: 0
      axis: 1
      def: None
      # End of Certification Scope
      test_variables:
        - variable_name: api_ip
          description: Target IP/Domain of the MiniAPI (e.g. 5gasp.eu or 10.10.10.10)
          mandatory: true
          possible_options: []
          can_be_injected_by_the_nods: True
          type: str
        - variable_name: api_port
          description: MiniAPI Port
          mandatory: true
          possible_options: []
          can_be_injected_by_the_nods: False
          type: int
        - variable_name: configuration_payload
          description: Configuration Payload for the MiniAPI (e.g. '{"variables":{"NEF_IP":"127.0.0.1","NEF_PORT":8888,...}}}')
          mandatory: true
          possible_options: []
          can_be_injected_by_the_nods: False
          type: str
    
    report_api_configuration:
      id: report_api_configuration
      name: NEF Emulator Report API Configuration - Robot Script
      description: Used to create a new report in the Reporting API
      ftp_base_location: tests/report_api_configuration/
      test_filename: report_api_configuration.robot
      test_type: Robot
      # Certification Scope
      mandatory: false
      weight: 0
      axis: 1
      def: None
      # End of Certification Scope
      test_variables:
        - variable_name: api_ip
          description: Target IP/Domain of the NEF Reporting API (e.g. 5gasp.eu or 10.10.10.10)
          mandatory: true
          possible_options: []
          can_be_injected_by_the_nods: True
          type: str
        - variable_name: api_port
          description: NEF Reporting API Port
          mandatory: true
          possible_options: []
          can_be_injected_by_the_nods: False
          type: int
    
    nef_authentication_test:
      id: nef_authentication_test
      name: NEF Authentication Test
      description: Validates if the NApp was able to authenticate with the NEF
      ftp_base_location: tests/nef_authentication_test/
      test_filename: nef_authentication_test.robot
      test_type: Robot
      # Certification Scope
      mandatory: true
      weight: 5
      axis: 1
      def: def11.5G.1
      test_conditions: [1]
      # End of Certification Scope
      test_variables:
        - variable_name: mini_api_endpoint_to_invoke
          description: Endpoint to invoke on the MiniAPI, which will trigger the authentication with the NEF (e.g. http://10.10.10.10:8000/start/1)
          mandatory: true
          possible_options: []
          can_be_injected_by_the_nods: False
          type: str
        - variable_name: reporting_api_ip
          description: Target IP/Domain of the NEF Reporting API (e.g. 5gasp.eu or 10.10.10.10)
          mandatory: true
          possible_options: []
          can_be_injected_by_the_nods: True
          type: str
        - variable_name: reporting_api_port
          description: NEF Reporting API Port
          mandatory: true
          possible_options: []
          can_be_injected_by_the_nods: False
          type: int
    
    nef_create_ue_test:
      id: nef_create_ue_test
      name: NEF Create UE Test
      description: Validates if the NApp was able to register a new UE in the NEF
      ftp_base_location: tests/nef_create_ue_test/
      test_filename: nef_create_ue_test.robot
      test_type: Robot
      # Certification Scope
      mandatory: false
      weight: 0
      axis: 1
      def: None
      # End of Certification Scope
      test_variables:
        - variable_name: mini_api_endpoint_to_invoke
          description: Endpoint to invoke on the MiniAPI, which will trigger the registration of a new UE in the NEF (e.g. http://10.10.10.10:8000/start/2)
          mandatory: true
          possible_options: []
          can_be_injected_by_the_nods: False
          type: str
        - variable_name: reporting_api_ip
          description: Target IP/Domain of the NEF Reporting API (e.g. 5gasp.eu or 10.10.10.10)
          mandatory: true
          possible_options: []
          can_be_injected_by_the_nods: True
          type: str
        - variable_name: reporting_api_port
          description: NEF Reporting API Port
          mandatory: true
          possible_options: []
          can_be_injected_by_the_nods: False
          type: int
    
    nef_get_ue_test:
      id: nef_get_ue_test
      name: NEF Get UE Test
      description: Validates if the NApp was able to obtain a UE's information from the NEF
      ftp_base_location: tests/nef_get_ue_test/
      test_filename: nef_get_ue_test.robot
      test_type: Robot
      # Certification Scope
      mandatory: false
      weight: 0
      axis: 1
      def: None
      # End of Certification Scope
      test_variables:
        - variable_name: mini_api_endpoint_to_invoke
          description: Endpoint to invoke on the MiniAPI, which will trigger the gathering of a UE's information from the NEF (e.g. http://10.10.10.10:8000/start/3)
          mandatory: true
          possible_options: []
          can_be_injected_by_the_nods: False
          type: str
        - variable_name: reporting_api_ip
          description: Target IP/Domain of the NEF Reporting API (e.g. 5gasp.eu or 10.10.10.10)
          mandatory: true
          possible_options: []
          can_be_injected_by_the_nods: True
          type: str
        - variable_name: reporting_api_port
          description: NEF Reporting API Port
          mandatory: true
          possible_options: []
          can_be_injected_by_the_nods: False
          type: int

    nef_monitoring_subscription_test:
      id: nef_monitoring_subscription_test
      name: NEF Monitoring Subscription Test
      description: Validates if the NApp was able to subscribe to a monitoring event in the NEF
      ftp_base_location: tests/nef_monitoring_subscription_test/
      test_filename: nef_monitoring_subscription_test.robot
      test_type: Robot
      # Certification Scope
      mandatory: false
      weight: 5
      axis: 1
      def: def11.5G.2
      test_conditions: [1,2]
      # End of Certification Scope
      test_variables:
        - variable_name: mini_api_endpoint_to_invoke
          description: Endpoint to invoke on the MiniAPI, which will trigger the subscription to a monitoring event in the NEF (e.g. http://10.10.10.10:8000/start/4)
          mandatory: true
          possible_options: []
          can_be_injected_by_the_nods: False
          type: str
        - variable_name: reporting_api_ip
          description: Target IP/Domain of the NEF Reporting API (e.g. 5gasp.eu or 10.10.10.10)
          mandatory: true
          possible_options: []
          can_be_injected_by_the_nods: True
          type: str
        - variable_name: reporting_api_port
          description: NEF Reporting API Port
          mandatory: true
          possible_options: []
          can_be_injected_by_the_nods: False
          type: int


################################################################
##                                                            ##
##                     Bristol's Testbed                      ##
##                                                            ##
################################################################

  testbed_uob:
    bandwidth:
      id: bandwidth
      name: bandwidth
      description: Tests the bandwidth between to VNFs. The results are in bits/sec
      ftp_base_location: tests/bandwidth/
      test_filename: testBandwidth.robot
      test_type: Robot
      # Certification Scope
      mandatory: false
      weight: 5
      axis: 4
      def: def14.Perf.1
      test_conditions: [7]
      # End of Certification Scope
      test_variables:
      - variable_name: host1_ip
        description: IP of Host/VNF 1
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: host1_username
        description: Login username for Host/VNF 1
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: host1_password
        description: Login password for Host/VNF 1
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: host2_ip
        description: IP of Host/VNF 2
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: host2_username
        description: Login username for Host/VNF 2
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: host2_password
        description: Login password for Host/VNF 2
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: comparator
        description: Comparator to be used while validating the bandwidth
        mandatory: true
        possible_options: ['more_than', 'more_or_equal_than', 'less_than', 'less_or_equal_than']
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: threshold
        description: Threshold in mbits per second
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: float

    bandwidth2:
      id: bandwidth2
      name: bandwidth2
      description: Tests the bandwidth between to VNFs. The results are in bits/sec
      ftp_base_location: tests/bandwidth2/
      test_filename: testBandwidth2.robot
      test_type: Robot
      # Certification Scope
      mandatory: false
      weight: 5
      axis: 4
      def: def14.Perf.1
      test_conditions: [7]
      # End of Certification Scope
      test_variables:
      - variable_name: host1_ip
        description: IP of Host/VNF 1
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: host1_username
        description: Login username for Host/VNF 1
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: host1_password
        description: Login password for Host/VNF 1
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: host2_ip
        description: IP of Host/VNF 2
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: host2_username
        description: Login username for Host/VNF 2
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: host2_password
        description: Login password for Host/VNF 2
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: comparator
        description: Comparator to be used while validating the bandwidth
        mandatory: true
        possible_options: ['more_than', 'more_or_equal_than', 'less_than', 'less_or_equal_than']
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: threshold
        description: Threshold in mbits per second
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: float

    transmission_speed:
      id: transmission_speed
      name: transmission speed
      description: Tests the transmission speed between to VNFs. The results are in ms
      ftp_base_location: tests/transmission_speed/
      test_filename: testTransmissionSpeed.robot
      test_type: Robot
      # Certification Scope
      mandatory: false
      weight: 5
      axis: 4
      def: def14.Perf.12 
      test_conditions: [7]
      # End of Certification Scope
      test_variables:
      - variable_name: host1_ip
        description: IP of Host/VNF 1
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: host1_username
        description: Login username for Host/VNF 1
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: host1_password
        description: Login password for Host/VNF 1
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: host2_ip
        description: IP of Host/VNF 2
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: host2_username
        description: Login username for Host/VNF 2
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: host2_password
        description: Login password for Host/VNF 2
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: comparator
        description: Comparator to be used while validating the transmission speed
        mandatory: true
        possible_options: ['more_than', 'more_or_equal_than', 'less_than', 'less_or_equal_than']
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: threshold
        description: Threshold in milliseconds
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: float

    packet_loss:
      id: packet_loss
      name: packet loss
      description: Tests the packet loss speed between to VNFs. The results are given in %
      ftp_base_location: tests/packet_loss/
      test_filename: testPacketLoss.robot
      test_type: Robot
      # Certification Scope
      mandatory: false
      weight: 5
      axis: 4
      def: None
      # End of Certification Scope
      test_variables:
      - variable_name: host1_ip
        description: IP of Host/VNF 1
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: host1_username
        description: Login username for Host/VNF 1
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: host1_password
        description: Login password for Host/VNF 1
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: host2_ip
        description: IP of Host/VNF 2
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: host2_username
        description: Login username for Host/VNF 2
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: host2_password
        description: Login password for Host/VNF 2
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: comparator
        description: Comparator to be used while validating the packet loss ratio
        mandatory: true
        possible_options: ['more_than', 'more_or_equal_than', 'less_than', 'less_or_equal_than']
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: threshold
        description: Ratio of packets lost
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: float

    open_ports:
      id: open_ports
      name: open ports
      description: Validates the if a VM's open ports are the ones that should be opened
      ftp_base_location: tests/open_ports/
      test_filename: testOpenPorts.robot
      test_type: Robot
      # Certification Scope
      mandatory: true
      weight: 7
      axis: 2
      def: def19.Sec.7
      test_conditions: [5]
      # End of Certification Scope
      test_variables:
      - variable_name: host
        description: Host of the target VNF
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: expected_open_ports
        description: Ports that should be open (Example - 22/tcp,8090/tcp)
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
    
    openstack_port_security:
      id: openstack_port_security
      name: Openstack Port Security
      description: Validates the if all Openstack Interfaces have Port Security enabled
      ftp_base_location: tests/openstack_port_security/
      test_filename: testOpenstackPortSecurity.robot
      test_type: Robot
      # Certification Scope
      mandatory: false
      weight: 3
      axis: 2
      def: def19.Sec.3
      test_conditions: [5]
      # End of Certification Scope

    ssh_audit:
      id: ssh_audit
      name: SSH Audit
      description: Audits VNF's SSH Server
      ftp_base_location: tests/ssh_audit/
      test_filename: testSshAudit.robot
      test_type: Robot
      # Certification Scope
      mandatory: true
      weight: 7
      axis: 2
      def: def19.Sec.8
      test_conditions: [5]
      # End of Certification Scope
      test_variables:
      - variable_name: ssh_host
        description: Host of the target VNF
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: ssh_port
        description: Port where the SSH Server is running (default=22)
        mandatory: false
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
    
    ssl_audit:
      id: ssl_audit
      name: SSL Audit
      description: Audits the SSL Certificates Protecting and Endpoint
      ftp_base_location: tests/ssl_audit/
      test_filename: test_ssl_audit.robot
      test_type: Robot
      # Certification Scope
      mandatory: true
      weight: 7
      axis: 2
      def: def19.Sec.4
      test_conditions: [5]
      # End of Certification Scope
      test_variables:
      - variable_name: url
        description: Endpoint's URL
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
    
    ssh_brute_force:
      id: ssh_brute_force
      name: SSH Brute Force
      description: Audits VNF's SSH Server Credentials
      ftp_base_location: tests/ssh_brute_force/
      test_filename: testSSHBruteforce.robot 
      test_type: Robot
      # Certification Scope
      mandatory: true
      weight: 7
      axis: 2
      def: def19.Sec.5
      test_conditions: [5]
      # End of Certification Scope
      test_variables:
      - variable_name: username
        description: The username of the VNF (optional)
        mandatory: false
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: max_usernames_to_test
        description: The maximum number of usernames to be tested (when the VNF's username is not provided - mandatory) 
        mandatory: false
        possible_options: []
        can_be_injected_by_the_nods: False
        type: int
      - variable_name: max_password_to_test
        description: The maximum number of passwords to be tested (mandatory)
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: int
      - variable_name: target_ip
        description: The IP of the target VNF (mandatory)
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: target_port
        description: The Port of the target VNF where the SSH Server is Running (optional, default=22)
        mandatory: false
        possible_options: []
        can_be_injected_by_the_nods: False
        type: int

    nef_authentication:
      id: nef_authentication
      name: NEF Authentication Test
      description: Audits if a VNF is capable of authenticating in the NEF
      ftp_base_location: tests/nef_authentication/
      test_filename: testNEFAuthentication.robot
      test_type: Robot
      # Certification Scope
      mandatory: false
      weight: 8
      axis: 1
      def: def11.5G.1
      test_conditions: [1]
      # End of Certification Scope
      test_variables:
      - variable_name: vnf_base_api_location
        description: The URL of the VNF's NEF Testing API 
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: nef_reporting_base_api_location
        description: The URL of the NEF's Reporting API
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: nef_ip
        description: NEF's IP
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: nef_port
        description: The NEF's Main API Port
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: int
      - variable_name: nef_username
        description: The NEF's Main API Login Username
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: nef_password
        description: The NEF's Main API Login Password
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str

################################################################
##                                                            ##
##                      OdinS's Testbed                       ##
##                                                            ##
################################################################

  testbed_odins:
    bandwidth:
      id: bandwidth
      name: bandwidth
      description: Tests the bandwidth between to VNFs. The results are in bits/sec
      ftp_base_location: tests/bandwidth/
      test_filename: testBandwidth.robot
      test_type: Robot
      # Certification Scope
      mandatory: false
      weight: 5
      axis: 4
      def: def14.Perf.1
      test_conditions: [7]
      # End of Certification Scope
      test_variables:
      - variable_name: host1_ip
        description: IP of Host/VNF 1
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: host1_username
        description: Login username for Host/VNF 1
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: host1_password
        description: Login password for Host/VNF 1
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: host2_ip
        description: IP of Host/VNF 2
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: host2_username
        description: Login username for Host/VNF 2
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: host2_password
        description: Login password for Host/VNF 2
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: comparator
        description: Comparator to be used while validating the bandwidth
        mandatory: true
        possible_options: ['more_than', 'more_or_equal_than', 'less_than', 'less_or_equal_than']
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: threshold
        description: Threshold in mbits per second
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: float

    bandwidth2:
      id: bandwidth2
      name: bandwidth2
      description: Tests the bandwidth between to VNFs. The results are in bits/sec
      ftp_base_location: tests/bandwidth2/
      test_filename: testBandwidth2.robot
      test_type: Robot
      # Certification Scope
      mandatory: false
      weight: 5
      axis: 4
      def: def14.Perf.1
      test_conditions: [7]
      # End of Certification Scope
      test_variables:
      - variable_name: host1_ip
        description: IP of Host/VNF 1
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: host1_username
        description: Login username for Host/VNF 1
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: host1_password
        description: Login password for Host/VNF 1
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: host2_ip
        description: IP of Host/VNF 2
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: host2_username
        description: Login username for Host/VNF 2
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: host2_password
        description: Login password for Host/VNF 2
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: comparator
        description: Comparator to be used while validating the bandwidth
        mandatory: true
        possible_options: ['more_than', 'more_or_equal_than', 'less_than', 'less_or_equal_than']
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: threshold
        description: Threshold in mbits per second
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: float

    transmission_speed:
      id: transmission_speed
      name: transmission speed
      description: Tests the transmission speed between to VNFs. The results are in ms
      ftp_base_location: tests/transmission_speed/
      test_filename: testTransmissionSpeed.robot
      test_type: Robot
      # Certification Scope
      mandatory: false
      weight: 5
      axis: 4
      def: def14.Perf.12 
      test_conditions: [7]
      # End of Certification Scope
      test_variables:
      - variable_name: host1_ip
        description: IP of Host/VNF 1
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: host1_username
        description: Login username for Host/VNF 1
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: host1_password
        description: Login password for Host/VNF 1
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: host2_ip
        description: IP of Host/VNF 2
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: host2_username
        description: Login username for Host/VNF 2
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: host2_password
        description: Login password for Host/VNF 2
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: comparator
        description: Comparator to be used while validating the transmission speed
        mandatory: true
        possible_options: ['more_than', 'more_or_equal_than', 'less_than', 'less_or_equal_than']
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: threshold
        description: Threshold in milliseconds
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: float

    packet_loss:
      id: packet_loss
      name: packet loss
      description: Tests the packet loss speed between to VNFs. The results are given in %
      ftp_base_location: tests/packet_loss/
      test_filename: testPacketLoss.robot
      test_type: Robot
      # Certification Scope
      mandatory: false
      weight: 5
      axis: 4
      def: None
      # End of Certification Scope
      test_variables:
      - variable_name: host1_ip
        description: IP of Host/VNF 1
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: host1_username
        description: Login username for Host/VNF 1
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: host1_password
        description: Login password for Host/VNF 1
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: host2_ip
        description: IP of Host/VNF 2
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: host2_username
        description: Login username for Host/VNF 2
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: host2_password
        description: Login password for Host/VNF 2
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: comparator
        description: Comparator to be used while validating the packet loss ratio
        mandatory: true
        possible_options: ['more_than', 'more_or_equal_than', 'less_than', 'less_or_equal_than']
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: threshold
        description: Ratio of packets lost
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: float

    open_ports:
      id: open_ports
      name: open ports
      description: Validates the if a VM's open ports are the ones that should be opened
      ftp_base_location: tests/open_ports/
      test_filename: testOpenPorts.robot
      test_type: Robot
      # Certification Scope
      mandatory: true
      weight: 7
      axis: 2
      def: def19.Sec.7
      test_conditions: [5]
      # End of Certification Scope
      test_variables:
      - variable_name: host
        description: Host of the target VNF
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: expected_open_ports
        description: Ports that should be open (Example - 22/tcp,8090/tcp)
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
    
    openstack_port_security:
      id: openstack_port_security
      name: Openstack Port Security
      description: Validates the if all Openstack Interfaces have Port Security enabled
      ftp_base_location: tests/openstack_port_security/
      test_filename: testOpenstackPortSecurity.robot
      test_type: Robot
      # Certification Scope
      mandatory: false
      weight: 3
      axis: 2
      def: def19.Sec.3
      test_conditions: [5]
      # End of Certification Scope

    ssh_audit:
      id: ssh_audit
      name: SSH Audit
      description: Audits VNF's SSH Server
      ftp_base_location: tests/ssh_audit/
      test_filename: testSshAudit.robot
      test_type: Robot
      # Certification Scope
      mandatory: true
      weight: 7
      axis: 2
      def: def19.Sec.8
      test_conditions: [5]
      # End of Certification Scope
      test_variables:
      - variable_name: ssh_host
        description: Host of the target VNF
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: ssh_port
        description: Port where the SSH Server is running (default=22)
        mandatory: false
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
    
    ssl_audit:
      id: ssl_audit
      name: SSL Audit
      description: Audits the SSL Certificates Protecting and Endpoint
      ftp_base_location: tests/ssl_audit/
      test_filename: test_ssl_audit.robot
      test_type: Robot
      # Certification Scope
      mandatory: true
      weight: 7
      axis: 2
      def: def19.Sec.4
      test_conditions: [5]
      # End of Certification Scope
      test_variables:
      - variable_name: url
        description: Endpoint's URL
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
    
    ssh_brute_force:
      id: ssh_brute_force
      name: SSH Brute Force
      description: Audits VNF's SSH Server Credentials
      ftp_base_location: tests/ssh_brute_force/
      test_filename: testSSHBruteforce.robot 
      test_type: Robot
      # Certification Scope
      mandatory: true
      weight: 7
      axis: 2
      def: def19.Sec.5
      test_conditions: [5]
      # End of Certification Scope
      test_variables:
      - variable_name: username
        description: The username of the VNF (optional)
        mandatory: false
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: max_usernames_to_test
        description: The maximum number of usernames to be tested (when the VNF's username is not provided - mandatory) 
        mandatory: false
        possible_options: []
        can_be_injected_by_the_nods: False
        type: int
      - variable_name: max_password_to_test
        description: The maximum number of passwords to be tested (mandatory)
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: int
      - variable_name: target_ip
        description: The IP of the target VNF (mandatory)
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: target_port
        description: The Port of the target VNF where the SSH Server is Running (optional, default=22)
        mandatory: false
        possible_options: []
        can_be_injected_by_the_nods: False
        type: int

    nef_authentication:
      id: nef_authentication
      name: NEF Authentication Test
      description: Audits if a VNF is capable of authenticating in the NEF
      ftp_base_location: tests/nef_authentication/
      test_filename: testNEFAuthentication.robot
      test_type: Robot
      # Certification Scope
      mandatory: false
      weight: 8
      axis: 1
      def: def11.5G.1
      test_conditions: [1]
      # End of Certification Scope
      test_variables:
      - variable_name: vnf_base_api_location
        description: The URL of the VNF's NEF Testing API 
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: nef_reporting_base_api_location
        description: The URL of the NEF's Reporting API
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: nef_ip
        description: NEF's IP
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: True
        type: str
      - variable_name: nef_port
        description: The NEF's Main API Port
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: int
      - variable_name: nef_username
        description: The NEF's Main API Login Username
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str
      - variable_name: nef_password
        description: The NEF's Main API Login Password
        mandatory: true
        possible_options: []
        can_be_injected_by_the_nods: False
        type: str

